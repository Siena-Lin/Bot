from telegram import Update, ReplyKeyboardMarkup, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters
import nest_asyncio
import asyncio

# –ü—Ä–∏–º–µ–Ω—è–µ–º nest_asyncio –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–º event loop
nest_asyncio.apply()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
language_texts = {
    "ru": {
        "welcome": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏–∑—É–∞–ª—å–Ω—É—é –Ω–æ–≤–µ–ª–ª—É! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        "new_game": "üÜï –ù–æ–≤–∞—è –∏–≥—Ä–∞",
        "load_game": "üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—É",
        "settings": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        "exit": "üö™ –í—ã—Ö–æ–¥",
        "choose_language": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
        "new_game_msg": "–ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã...",
        "load_game_msg": "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä—ã...",
        "settings_msg": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏...",
        "exit_msg": "–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã..."
    },
    "en": {
        "welcome": "Welcome to the visual novel! Choose an action:",
        "new_game": "üÜï New Game",
        "load_game": "üìÇ Load Game",
        "settings": "‚öôÔ∏è Settings",
        "exit": "üö™ Exit",
        "choose_language": "Choose a language:",
        "new_game_msg": "Starting a new game...",
        "load_game_msg": "Loading game...",
        "settings_msg": "Settings...",
        "exit_msg": "Exiting game..."
    },
    "de": {
        "welcome": "Willkommen in der visuellen Novelle! W√§hlen Sie eine Aktion:",
        "new_game": "üÜï Neues Spiel",
        "load_game": "üìÇ Spiel laden",
        "settings": "‚öôÔ∏è Einstellungen",
        "exit": "üö™ Beenden",
        "choose_language": "W√§hlen Sie eine Sprache:",
        "new_game_msg": "Neues Spiel beginnt...",
        "load_game_msg": "Spiel wird geladen...",
        "settings_msg": "Einstellungen...",
        "exit_msg": "Spiel verlassen..."
    },
    "zh": {
        "welcome": "Ê¨¢ËøéÊù•Âà∞ËßÜËßâÂ∞èËØ¥ÔºÅËØ∑ÈÄâÊã©‰∏Ä‰∏™Êìç‰Ωú:",
        "new_game": "üÜï Êñ∞Ê∏∏Êàè",
        "load_game": "üìÇ Âä†ËΩΩÊ∏∏Êàè",
        "settings": "‚öôÔ∏è ËÆæÁΩÆ",
        "exit": "üö™ ÈÄÄÂá∫",
        "choose_language": "ÈÄâÊã©ËØ≠Ë®Ä:",
        "new_game_msg": "ÂºÄÂßãÊñ∞Ê∏∏Êàè...",
        "load_game_msg": "Âä†ËΩΩÊ∏∏Êàè‰∏≠...",
        "settings_msg": "ËÆæÁΩÆ...",
        "exit_msg": "ÈÄÄÂá∫Ê∏∏Êàè..."
    },
    "ar": {
        "welcome": "ŸÖÿ±ÿ≠ÿ®Ÿãÿß ÿ®ŸÉ ŸÅŸä ÿßŸÑÿ±ŸàÿßŸäÿ© ÿßŸÑŸÖÿ±ÿ¶Ÿäÿ©! ÿßÿÆÿ™ÿ± ÿ•ÿ¨ÿ±ÿßÿ°:",
        "new_game": "üÜï ŸÑÿπÿ®ÿ© ÿ¨ÿØŸäÿØÿ©",
        "load_game": "üìÇ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÑÿπÿ®ÿ©",
        "settings": "‚öôÔ∏è ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™",
        "exit": "üö™ ÿÆÿ±Ÿàÿ¨",
        "choose_language": "ÿßÿÆÿ™ÿ± ÿßŸÑŸÑÿ∫ÿ©:",
        "new_game_msg": "ÿ®ÿØÿ° ŸÑÿπÿ®ÿ© ÿ¨ÿØŸäÿØÿ©...",
        "load_game_msg": "ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÑÿπÿ®ÿ©...",
        "settings_msg": "ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™...",
        "exit_msg": "ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ ÿßŸÑŸÑÿπÿ®ÿ©..."
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
user_language = {}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def choose_language(update: Update, context) -> None:
    keyboard = [["–†—É—Å—Å–∫–∏–π", "English"], ["Deutsch", "‰∏≠Êñá", "ÿπÿ±ÿ®Ÿä"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "Choose a language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / W√§hlen Sie eine Sprache / ÈÄâÊã©ËØ≠Ë®Ä / ÿßÿÆÿ™ÿ± ÿßŸÑŸÑÿ∫ÿ©:",  
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def handle_language(update: Update, context) -> None:
    chat_id = update.message.chat_id
    text = update.message.text.lower()

    if text == "—Ä—É—Å—Å–∫–∏–π":
        user_language[chat_id] = "ru"
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫.")
    elif text == "english":
        user_language[chat_id] = "en"
        await update.message.reply_text("You have selected English.")
    elif text == "deutsch":
        user_language[chat_id] = "de"
        await update.message.reply_text("Sie haben Deutsch gew√§hlt.")
    elif text == "‰∏≠Êñá":
        user_language[chat_id] = "zh"
        await update.message.reply_text("ÊÇ®ÈÄâÊã©‰∫Ü‰∏≠Êñá„ÄÇ")
    elif text == "ÿπÿ±ÿ®Ÿä":
        user_language[chat_id] = "ar"
        await update.message.reply_text("ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©.")
    else:
        await update.message.reply_text("Please choose a valid language.")
        return

    # –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –º–µ–Ω—é
    await start(update, context)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
async def start(update: Update, context) -> None:
    chat_id = update.message.chat_id
    lang = user_language.get(chat_id, "en")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω

    texts = language_texts[lang]

    keyboard = [
        [texts["new_game"], texts["load_game"]],
        [texts["settings"], texts["exit"]]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        texts["welcome"],
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
async def handle_menu(update: Update, context) -> None:
    chat_id = update.message.chat_id
    lang = user_language.get(chat_id, "en")
    texts = language_texts[lang]

    text = update.message.text

    if text == texts["new_game"]:
        await update.message.reply_text(texts["new_game_msg"])
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã
    elif text == texts["load_game"]:
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        web_app_url = 'https://siena-lin.github.io/Visual-Novel-Public/'
        keyboard = [
            [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=web_app_url))]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:", reply_markup=reply_markup)
    elif text == texts["settings"]:
        await update.message.reply_text(texts["settings_msg"])
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    elif text == texts["exit"]:
        await update.message.reply_text(texts["exit_msg"])
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main() -> None:
    # –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    TOKEN = "7169951156:AAH7Cf_BaWIQETdP2yVyQIAzQMxDPXbVyuY"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()

    # –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    application.add_handler(CommandHandler("start", choose_language))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_language))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await application.run_polling()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
